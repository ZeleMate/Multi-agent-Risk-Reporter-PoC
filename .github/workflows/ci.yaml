name: CI
permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONUNBUFFERED: "1"
  OPENAI_API_KEY: "sk-ci-placeholder"
  OPENAI_BASE_URL: "http://localhost" # véletlen hívások ellen

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: venv-${{ runner.os }}-

      - name: Install (frozen)
        run: uv sync --extra dev --extra test --frozen

      - name: Black
        run: uv run black --check . --line-length=100
      - name: Ruff
        run: uv run ruff check .
      - name: mypy (advisory)
        run: uv run mypy src/ || true
      - name: bandit (advisory)
        run: uv run bandit -r src/ || true

      - name: Markdownlint
        uses: avto-dev/markdown-lint@v1
        with:
          args: "**/*.md"
        continue-on-error: true

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python: ["3.11"] # bővíthető: ["3.10","3.11","3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: astral-sh/setup-uv@v1

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: venv-${{ runner.os }}-${{ matrix.python }}-

      - name: Install (frozen)
        run: uv sync --extra dev --extra test --frozen

      - name: Import smoke
        run: |
          uv run python - <<'PY'
          import importlib
          for m in ["langgraph","langchain","chromadb","openai"]:
              importlib.import_module(m)
          print("Core imports OK")
          PY

      - name: Unit tests + coverage (if any)
        run: |
          if [ -d tests ]; then uv run pytest -q --maxfail=1 --disable-warnings --cov=src --cov-report=xml; else echo "No tests/"; fi